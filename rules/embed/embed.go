package main

import (
	"dbt/log"
	"dbt/util"
	"fmt"
	"os"
	"path"
	"path/filepath"
	"strings"
)

const rulesFileName = "rules.go"
const rulesFileTemplate = `
// This file is generated. Do not edit this file.

package rules

//go:generate go run embed/embed.go

var Rules = map[string]string{
%s
}
`

// Creates a map[string]string with the names and content of all .go files in the builtin
// subdirectory. The map is compiled into the dbt binary and the rule files extracted when
// generating the Ninja build file. This way, the rules defined in the builtin/ subdirectory
// are available in BUILD.go files.
func main() {
	rules := []string{}

	err := filepath.Walk("builtin/",
		func(filePath string, file os.FileInfo, err error) error {
			if path.Ext(filePath) != ".go" {
				return nil
			}
			data := util.ReadFile(filePath)
			rule := fmt.Sprintf("    \"%s\": `%s`,\n", filePath, data)
			rules = append(rules, rule)
			return nil
		})
	if err != nil {
		log.Fatal("Failed to embed builtin rules: %s.\n", err)
	}

	rulesFileContent := fmt.Sprintf(rulesFileTemplate, strings.Join(rules, "\n"))
	util.WriteFile(rulesFileName, []byte(rulesFileContent))
}
