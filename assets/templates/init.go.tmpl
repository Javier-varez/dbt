// This file is generated. Do not edit this file.

package {{ .Package }}

import "dbt-rules/RULES/core"

type __internal_pkg struct{}

func DbtMain(vars map[string]interface{}) {
	{{- range .Vars }}
	vars[in("{{.}}").Relative()] = &{{.}}
	{{- end }}
}

func in(name string) core.Path {
	return core.NewInPath(__internal_pkg{}, name)
}

func ins(names ...string) []core.Path {
	var paths []core.Path
	for _, name := range names {
		paths = append(paths, in(name))
	}
	return paths
}

func out(name string) core.OutPath {
	return core.NewOutPath(__internal_pkg{}, name)
}

func (ip __internal_pkg) SrcDir() string {
	return "{{ .SourceDir }}"
}
